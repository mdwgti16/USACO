"""
ID: xggc1
LANG: PYTHON3
PROG: castle
"""
fin = open('castle.in','r')
X,Y = map(int,fin.readline().strip().split(' '))
rooms=[list(map(int,line.strip().split(' '))) for line in fin.readlines()]

dsrt={}
room={}
wRooms=[[]]

rNum=1
largestRoom=0

def getRoom(x,y,cnt,):
    room[rNum]+=1
    t=rooms[y][x]
    if t >= 8:
        t-=8
    elif not (y+1,x) in dsrt:
            dsrt[y+1,x]=rNum
            getRoom(x,y+1,cnt+1)
        
    if t >= 4:
        t-=4
        if x+1<X:
            wRooms[rNum].append([y,x,'E'])
    elif not (y,x+1) in dsrt:
            dsrt[y,x+1]=rNum
            getRoom(x+1,y,cnt+1)
        
    if t >= 2:
        t-=2
        if not y-1<0:
            wRooms[rNum].append([y,x,'N'])
    elif not (y-1,x) in dsrt:
            dsrt[y-1,x]=rNum
            getRoom(x,y-1,cnt+1)
        
    if t >= 1:
        t-=1
    elif not (y,x-1) in dsrt:
            dsrt[y,x-1]=rNum
            getRoom(x-1,y,cnt+1)

for i in range(Y):
    for j in range(X):
        if not (i,j) in dsrt:
            dsrt[i,j]=rNum
            room[rNum]=0
            wRooms.append([])
            getRoom(j,i,1)
            if room[rNum]>largestRoom:
                largestRoom=room[rNum]
            rNum+=1

for r in wRooms:
    r.sort(key=lambda x: (x[0],-x[1]))

answer=[]
for r in range(1,rNum):
    for e in wRooms[r]:
        x = e[1]
        y = e[0]
        if e[2]=='E':
            nr = dsrt[y,x+1]
        else:
            nr = dsrt[y-1,x]

        if nr != r:
            mRoom=room[nr] + room[r]
        
            if not answer or answer[0] < mRoom:
                answer=[mRoom,y,x,e[2]]    
                
            elif answer[0] == mRoom:
                if answer[2] > x :
                    answer=[mRoom,y,x,e[2]]
                elif answer[2] == x :
                    if answer[1] < y:
                        answer=[mRoom,y,x,e[2]]
                    elif answer[1] == y:
                        if e[2]=='N':
                            answer=[mRoom,y,x,e[2]]

with open('castle.out','w') as fout:
    fout.write(f'{rNum-1}\n')
    fout.write(f'{largestRoom}\n')
    fout.write(f'{answer[0]}\n')
    fout.write(f'{answer[1]+1} {answer[2]+1} {answer[3]}\n')
